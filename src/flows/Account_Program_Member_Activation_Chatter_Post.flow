<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Sends a notification on desktop and mobile to the users in the territory of the Account that the account program has been activated.</description>
        <name>sendNotification</name>
        <label>sendNotification</label>
        <locationX>182</locationX>
        <locationY>1583</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>getCustomNotification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>notificationBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>notificationTitle</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>territoryUserIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>assignCreatorToNotificationRecipients</name>
        <label>assignCreatorToNotificationRecipients</label>
        <locationX>50</locationX>
        <locationY>575</locationY>
        <assignmentItems>
            <assignToReference>territoryUserIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.CreatedBy.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>getTerritoryUsers</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignTerritoryUserId</name>
        <label>assignTerritoryUserId</label>
        <locationX>270</locationX>
        <locationY>1151</locationY>
        <assignmentItems>
            <assignToReference>territoryUserIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loopTerritoryUsers.UserId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loopTerritoryUsers</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>decisionNotificationsEnabled</name>
        <label>decisionNotificationsEnabled</label>
        <locationX>336</locationX>
        <locationY>335</locationY>
        <defaultConnectorLabel>notificationsFalse</defaultConnectorLabel>
        <rules>
            <name>notificationsTrue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.LoyaltyProgram__r.Notifications__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Send Chatter Notification to Territory Users</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IsCreatorActive</targetReference>
            </connector>
            <label>notificationsTrue</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsCreatorActive</name>
        <label>IsCreatorActive</label>
        <locationX>182</locationX>
        <locationY>455</locationY>
        <defaultConnector>
            <targetReference>getTerritoryUsers</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>CreatorIsActive</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.CreatedBy.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>assignCreatorToNotificationRecipients</targetReference>
            </connector>
            <label>CreatorIsActive</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking user status and filtering on active users only.</description>
        <name>IsTerritoryUserActive</name>
        <label>IsTerritoryUserActive</label>
        <locationX>402</locationX>
        <locationY>1031</locationY>
        <defaultConnector>
            <targetReference>loopTerritoryUsers</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>TerritoryUserIsActive</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loopTerritoryUsers.User.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>assignTerritoryUserId</targetReference>
            </connector>
            <label>TerritoryUserIsActive</label>
        </rules>
    </decisions>
    <description>2022-01-28: TFUS-000003979: Filter on active users only.</description>
    <formulas>
        <name>userMentionFormula</name>
        <dataType>String</dataType>
        <expression>&quot;@[&quot;&amp;{!flowTempVariable}&amp;&quot;] &quot;</expression>
    </formulas>
    <interviewLabel>Account Program Member: Activation Chatter Post {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Account Program Member: Activation Chatter Post</label>
    <loops>
        <name>loopTerritoryUsers</name>
        <label>loopTerritoryUsers</label>
        <locationX>182</locationX>
        <locationY>911</locationY>
        <collectionReference>getTerritoryUsers</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>IsTerritoryUserActive</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>getCustomNotification</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>getCustomNotification</name>
        <label>getCustomNotification</label>
        <locationX>182</locationX>
        <locationY>1463</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>sendNotification</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>One_DS_Terms_Conditions_Signed</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getTerritoryUsers</name>
        <label>getTerritoryUsers</label>
        <locationX>182</locationX>
        <locationY>791</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>loopTerritoryUsers</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AccountUserTerritory2View</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>210</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>decisionNotificationsEnabled</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <object>LoyaltyProgramParticipant__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>notificationBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>{!$Record.Account__r.Name} has been successfully registered to the Account Program {!$Record.LoyaltyProgram__r.Name}.</text>
    </textTemplates>
    <textTemplates>
        <name>notificationTitle</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>{!$Record.LoyaltyProgram__r.Name} has been activated for {!$Record.Account__r.Name}</text>
    </textTemplates>
    <variables>
        <name>flowTempVariable</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>territoryUserIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>territoryUsersTemplate</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
