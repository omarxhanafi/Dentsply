<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <description>Use this template to create Flows in QuickActions that let the user create records in the standard new record screen but with pre-populated fields from another record. The flow lets the admin configure what kind of object should be created and which fields that will be mapped from the source object to the new object.</description>
    <interviewLabel>Template {!$Flow.CurrentDateTime}</interviewLabel>
    <isTemplate>true</isTemplate>
    <label>Template: CreateRecordWithPopulatedValues2</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <screens>
        <description>Get started guide</description>
        <name>README</name>
        <label>!README</label>
        <locationX>390</locationX>
        <locationY>60</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ReadMeHeader</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Hi Salesforce Admin! ðŸ‘‹&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;Here&apos;s a quick guide on how to use this component.&lt;/i&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ReadMeBody</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Supported Experiences&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Lightning, Desktop, Mobile&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Intended Use&lt;/b&gt;&lt;/p&gt;&lt;p&gt;This flow is intended to be used via a quick action on a record page to launch the default record creation screen with custom default values.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Functionality&lt;/b&gt;&lt;/p&gt;&lt;p&gt;This flow allows you to declaratively customize default values on the standard record creation screen. Besides setting the field values yourself, you can also use field values from the source record (the one where the quick action is placed) as well as the running user.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Configuration&lt;/b&gt;&lt;/p&gt;&lt;p&gt;In order to configure this component, edit the variables available in the first screen element. You can:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Set Target Object&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;This is a required variable. Use the api name of the object that you want the user to create.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Set a &lt;b&gt;Record Type Label&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;If you set a value, the record type selection screen will be bypassed and the user will be navigated to the record creation screen.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Set &lt;b&gt;Default Values&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Setting default values is done with the following format which is based on standard JSON format: {&quot;TargetField1&quot;:&quot;Value1&quot;,&quot;TargetField2&quot;:&quot;Value2&quot;}&lt;/li&gt;&lt;li&gt;To use a field value from the source record, include the field in the following way with curly brackets: {&quot;TargetField&quot;:&quot;{$FirstName}&quot;}&lt;/li&gt;&lt;li&gt;To use a field value from the current user, use the following format: {&quot;TargetField&quot;:&quot;{$User.Name}&quot;}&lt;/li&gt;&lt;li&gt;You can freely combine how the end default string will look like: {&quot;TargetField&quot;:&quot;Here&apos;s a field from the source record: {$Name} and this is the current user {$User.UserName}&quot;}&lt;/li&gt;&lt;/ul&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ReadMeExample</name>
            <fieldText>&lt;p&gt;&lt;b&gt;ðŸš€ Finally Here&apos;s an Example ðŸš€&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Let&apos;s say that this flow is added as a quick action on the Account object and we want to show the Contact record creation screen when the user clicks on the action.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;The Account&lt;/b&gt; contains the following information:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Account.Name: Acme Inc.&lt;/li&gt;&lt;li&gt;Account.Phone: 08-555 555&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The &lt;b&gt;Current User&lt;/b&gt; contains the following information:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;UserName: user@salesforce.com&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We set the &lt;b&gt;default field values&lt;/b&gt; for the contact:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;{&quot;Name&quot;:&quot;Created from {$Name}!, &quot;Description&quot;:&quot;{$User.Username} created this record. You can call the account on {$Phone}.&quot;}&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;The Result&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Here&apos;s how the fields will look like once the create record page is shown to the user:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Contact Name: Created from Acme Inc.!&lt;/li&gt;&lt;li&gt;Contact Description: user@salesforce.com created this record. You can call the account on 08-555 555.&lt;/li&gt;&lt;/ul&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Finish screen that will take the user to the default create record screen. Message is only shown on mobile, since the user needs to close the flow on mobile if they press cancel while creating a record.</description>
        <name>ScreenFinish</name>
        <label>ScreenFinish</label>
        <locationX>733</locationX>
        <locationY>174</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>msgCancel</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 72px;&quot;&gt;ðŸ‘‹&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Please press &lt;/span&gt;&lt;b style=&quot;font-size: 18px;&quot;&gt;Cancel&lt;/b&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt; to close the window&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>NavigateToCreateRecordComp.hasNavigated</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>NavigateToCreateRecordComp</name>
            <extensionName>c:NavigateToCreateRecordComp_FLOW</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>defaultFieldValues</name>
                <value>
                    <stringValue>{&quot;TargetField&quot;:&quot;Value {$FieldFromSourceObject} {$User.UserField}&quot;}</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectToCreate</name>
                <value>
                    <stringValue>Object__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordTypeId</name>
                <value>
                    <elementReference>RecordTypePickerComp.recordTypeId</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Let&apos;s the user select a record type.</description>
        <name>ScreenRecordTypeSelection</name>
        <label>ScreenRecordTypeSelection</label>
        <locationX>391</locationX>
        <locationY>174</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>ScreenFinish</targetReference>
        </connector>
        <fields>
            <name>RecordTypePickerComp</name>
            <extensionName>c:RecordTypePickerComp_FLOW</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectToCreate</name>
                <value>
                    <stringValue>Object__c</stringValue>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>ScreenRecordTypeSelection</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
