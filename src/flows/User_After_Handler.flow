<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Assign_PSA_To_Remove</name>
        <label>Assign PSA To Remove</label>
        <locationX>534</locationX>
        <locationY>1271</locationY>
        <assignmentItems>
            <assignToReference>PSAToRemove</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>For_Each_PSA_Assigned</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>For_Each_PSA_Assigned</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>The assignement for the single Permission Set Assignment Record</description>
        <name>Assingn_Single_PSA</name>
        <label>Assingn Single PSA</label>
        <locationX>138</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>SinglePSAToAssign.AssigneeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SinglePSAToAssign.PermissionSetId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>For_Each_Permission_Set_To_Assign.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PSAs_To_Insert</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>SinglePSAToAssign</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>For_Each_Permission_Set_To_Assign</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_the_User_Status</name>
        <label>Check the User Status</label>
        <locationX>578</locationX>
        <locationY>335</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>User_is_ACTIVE_NEW</name>
            <conditionLogic>(1 AND 2) OR 3</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsActive</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>User_Is_New_Formula</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Permission_Sets_To_Assign</targetReference>
            </connector>
            <label>User is ACTIVE or NEW</label>
        </rules>
        <rules>
            <name>User_is_INACTIVE</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsActive</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_User_Group_Membership_Assigned</targetReference>
            </connector>
            <label>User is INACTIVE</label>
        </rules>
    </decisions>
    <decisions>
        <name>Permission_Set_Group_exisit</name>
        <label>Permission Set Group exist?</label>
        <locationX>578</locationX>
        <locationY>1031</locationY>
        <defaultConnector>
            <targetReference>Get_Permission_Set_License_Assigned</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Permission_Set_Group_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Permission_Set_Group_Assinged_To_User</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>For_Each_PSA_Assigned</targetReference>
            </connector>
            <label>Permission Set Group found</label>
        </rules>
    </decisions>
    <decisions>
        <description>Delete Permission Set License only if they exist</description>
        <name>Permission_Set_License_Exist</name>
        <label>Permission Set License Exist?</label>
        <locationX>578</locationX>
        <locationY>1823</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Permission_Set_License_assinged</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Permission_Set_License_Assigned</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_Permission_Set_License_Assignment</targetReference>
            </connector>
            <label>Permission Set License assinged</label>
        </rules>
        <rules>
            <name>Permission_Set_License_NOT_assigned</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Permission_Set_License_Assigned</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Permission Set License NOT assigned</label>
        </rules>
    </decisions>
    <decisions>
        <name>Public_Group_exists</name>
        <label>Public Group exists?</label>
        <locationX>578</locationX>
        <locationY>575</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Public_Group_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_User_Group_Membership_Assigned</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_all_the_Group_Membership</targetReference>
            </connector>
            <label>Public Group found</label>
        </rules>
        <rules>
            <name>Public_Group_Not_Fond</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_User_Group_Membership_Assigned</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Permission_Set_Group_Assinged_To_User</targetReference>
            </connector>
            <label>Public Group Not Fond</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <description>This Formula is created to understand if the User is new because you don&apos;t have this option in the decision path.</description>
        <name>User_Is_New_Formula</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>User: {!$Flow.CurrentDateTime}</interviewLabel>
    <label>User: After Handler</label>
    <loops>
        <name>For_Each_Permission_Set_To_Assign</name>
        <label>For Each Permission Set To Assign</label>
        <locationX>50</locationX>
        <locationY>575</locationY>
        <collectionReference>Get_Permission_Sets_To_Assign</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assingn_Single_PSA</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Create_Permission_Set_Assignment</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>For_Each_PSA_Assigned</name>
        <label>For Each PSA Assigned</label>
        <locationX>446</locationX>
        <locationY>1151</locationY>
        <collectionReference>Permission_Set_Group_Assinged_To_User</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_PSA_To_Remove</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Delete_PSA</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Create Permission Set Assignment</description>
        <name>Create_Permission_Set_Assignment</name>
        <label>Create Permission Set Assignment</label>
        <locationX>50</locationX>
        <locationY>911</locationY>
        <inputReference>PSAs_To_Insert</inputReference>
    </recordCreates>
    <recordDeletes>
        <description>Delete all the PS and PSG assigned to the Inactive User</description>
        <name>Delete_all_the_Group_Membership</name>
        <label>Delete all the Group Membership</label>
        <locationX>358</locationX>
        <locationY>695</locationY>
        <connector>
            <targetReference>Permission_Set_Group_Assinged_To_User</targetReference>
        </connector>
        <inputReference>Get_User_Group_Membership_Assigned</inputReference>
    </recordDeletes>
    <recordDeletes>
        <name>Delete_Permission_Set_License_Assignment</name>
        <label>Delete Permission Set License Assignment</label>
        <locationX>314</locationX>
        <locationY>1943</locationY>
        <inputReference>Get_Permission_Set_License_Assigned</inputReference>
    </recordDeletes>
    <recordDeletes>
        <name>Delete_PSA</name>
        <label>Delete PSA</label>
        <locationX>446</locationX>
        <locationY>1487</locationY>
        <connector>
            <targetReference>Get_Permission_Set_License_Assigned</targetReference>
        </connector>
        <inputReference>PSAToRemove</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>Get_Permission_Set_License_Assigned</name>
        <label>Get Permission Set License Assigned</label>
        <locationX>578</locationX>
        <locationY>1703</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Permission_Set_License_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AssigneeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>PermissionSetLicenseAssign</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This action will get the Used Approved App Permission Set</description>
        <name>Get_Permission_Sets_To_Assign</name>
        <label>Get Permission Sets To Assign</label>
        <locationX>50</locationX>
        <locationY>455</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>For_Each_Permission_Set_To_Assign</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Global_System_Single_Sign_On_Enforced_PS_ID</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Global_System_Use_Native_API_Apps_PS_ID</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>PermissionSet</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Retrieve all the permission Set and all the Permission Set Group assigned to the User</description>
        <name>Get_User_Group_Membership_Assigned</name>
        <label>Get User Group Membership Assigned</label>
        <locationX>578</locationX>
        <locationY>455</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Public_Group_exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Permission_Set_Group_Assinged_To_User</name>
        <label>Permission Set Group Assinged To User</label>
        <locationX>578</locationX>
        <locationY>911</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Permission_Set_Group_exisit</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3  OR 4)</filterLogic>
        <filters>
            <field>AssigneeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>PermissionSetGroupId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>PermissionSetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Global_System_Single_Sign_On_Enforced_PS_ID</elementReference>
            </value>
        </filters>
        <filters>
            <field>PermissionSetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Global_System_Use_Native_API_Apps_PS_ID</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>PermissionSetAssignment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_the_User_Status</targetReference>
        </connector>
        <filterFormula>{!$Setup.GlobalBypassProcessesSettings__c.RunFlows__c}</filterFormula>
        <object>User</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>The 	Global_System_Single_Sign_On_Enforced Permission Set Id</description>
        <name>Global_System_Single_Sign_On_Enforced_PS_ID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>0PS0J000000eeuyWAA</stringValue>
        </value>
    </variables>
    <variables>
        <description>Global_System_Use_Native_API_Apps Permission Set Id</description>
        <name>Global_System_Use_Native_API_Apps_PS_ID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>0PS0J000000oxdbWAA</stringValue>
        </value>
    </variables>
    <variables>
        <name>PSAs_To_Insert</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>PermissionSetAssignment</objectType>
    </variables>
    <variables>
        <name>PSAToRemove</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>PermissionSetAssignment</objectType>
    </variables>
    <variables>
        <name>SinglePSAToAssign</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>PermissionSetAssignment</objectType>
    </variables>
</Flow>
